Explain what software engineering is and discuss its importance in the technology industry.
1. Software Engineering is a systematic and disciplined approach to the design, development, 
 testing, and maintenance of software. It involves applying engineering principles and practices 
 to ensure that software is reliable, efficient, maintainable, and meets user requirements.
2. In the technology industry, software engineering is foundational to creating products and services
 that are robust, scalable, and aligned with business goals. It's the backbone of everything from
 small apps to large enterprise systems, driving innovation and technological progress.

Identify and describe at least three key milestones in the evolution of software engineering
1. The Birth of Structured Programming (1960s-1970s)
 Before structured programming, software development was largely ad-hoc, leading to "spaghetti code"â€”code 
 with tangled control structures that were difficult to understand and maintain. The introduction of structured

2. The Advent of Object-Oriented Programming (1980s)
 Object-oriented programming (OOP) introduced a new paradigm where software was modeled as a collection of objects,
 each representing an instance of a class. This encapsulated data and behavior, promoting reusability and modularity.
 OOP revolutionized software design by allowing developers to build more complex systems with greater ease. 

3. The Rise of Agile Methodologies (2001)
 The Agile Manifesto was published in 2001, promoting values and principles that emphasized flexibility,
 collaboration, and customer feedback over rigid planning and documentation. Agile methodologies, such as Scrum and
 Kanban, advocate for iterative development, where software is built in small, manageable increments with continuous
 feedback and adaptation.Impact: Agile transformed the way software projects were managed and developed, particularly
 in fast-paced environments where requirements often change. It has become the dominant methodology in the industry, 
 enabling teams to deliver high-quality software more quickly and efficiently while responding to evolving customer needs.

List and briefly explain the phases of the Software Development Life Cycle.
1. Planning: Define the project's scope, objectives, and feasibility. This phase involves gathering business requirements,
 estimating costs, and creating a project plan. Project planning, resource allocation, risk assessment, and 
 scheduling.
2. Requirements Analysis: Understand and document what the software needs to do to meet the business goals. This phase translates
 business needs into detailed technical requirements.
3. Design: Architect the software by creating a blueprint of how the system will function and be structured. This phase defines 
 the overall system architecture and design.
4.Implementation (or Development): Translate the design into actual code by writing and compiling the software according to the specifications. 
5. Testing: Ensure the software is free of defects and meets the required standards and user expectations. This phase involves rigorous testing 
 of the system.
6. Deploymen: Release the software to the production environment where it can be accessed by the end-users. This phase involves 
 transferring the software from the development environment to live servers.
7. Maintenance: Continuously improve and update the software post-deployment to fix any issues, enhance functionality, or adapt 
 to changing user needs


